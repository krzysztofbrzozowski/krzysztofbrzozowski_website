version: "3"

services:
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
      - static:/app/static
    command: >
      sh -c "chmod 755 /app/bin/initial_deploy.sh &&
             sh -c /app/bin/initial_deploy.sh &&
             python manage.py await_for_db &&
             python manage.py makemigrations && 
             python manage.py migrate &&
             gunicorn krzysztofbrzozowski.wsgi:application --workers=3 --bind 0.0.0.0:8000 "

    environment:
      - VIRTUAL_HOST=dev.krzysztofbrzozowski.com
      - LETSENCRYPT_HOST=dev.krzysztofbrzozowski.com
      - LETSENCRYPT_EMAIL=prim_zone_0x@icloud.com

      - DB_HOST=db
      - POSTGRES_DATABASE_FILE=/run/secrets/POSTGRES_DATABASE
      - POSTGRES_USERNAME_FILE=/run/secrets/POSTGRES_USERNAME
      - POSTGRES_PASSWORD_FILE=/run/secrets/POSTGRES_PASSWORD
      - ADMIN_PATH_FILE=/run/secrets/ADMIN_PATH

      - PRODUCTION=true
      - DO_INITIAL_DEPLOY=false
      - DEBUG=false

      # Env variables for initial deploy
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_PASSWORD=admin
      - DJANGO_SUPERUSER_EMAIL=admin@admin.com

    depends_on:
      - db
    secrets:
      - POSTGRES_DATABASE
      - POSTGRES_USERNAME
      - POSTGRES_PASSWORD
      - ADMIN_PATH

  db:
    image: postgres:latest
    restart: always
    volumes:
      - ./db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/POSTGRES_PASSWORD
    ports:
      - "5432:5432"
    secrets:
      - POSTGRES_USERNAME
      - POSTGRES_PASSWORD

  # NGINX BASIC CONFIG 
  nginx-proxy:
    depends_on:
      - app
    restart: always
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - static:/var/www/html/static

  # NGINX REVERSE PROXY CONFIG
  dockergen:
    image: nginxproxy/docker-gen
    command: -notify-sighup nginx-proxy -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl
    labels:
      - "com.github.nginx-proxy.docker-gen"
    
  # ACME COMPANION (LET'S ENCRYPT PROTOCOL)
  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    environment:
      - DEFAULT_EMAIL=prim_zone_0x@icloud.com
    volumes_from:
      - nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - nginx-proxy

secrets:
  POSTGRES_USERNAME:
    file: ./app/bin/postgres_username.txt
  POSTGRES_PASSWORD:
    file: ./app/bin/postgres_password.txt
  POSTGRES_DATABASE:
    file: ./app/bin/postgres_database.txt
  ADMIN_PATH:
    file: ./app/bin/admin_path.txt

volumes:
  postgres_data:
  static_volume:
  media_volume:
  certs:
  html:
  vhost:
  acme:
  conf:
  static:





# db-backup:
  #   image: postgres:latest
  #   depends_on:
  #     - db
  #   volumes:
  #     - ./db-backup:/db-backup
  #   command: >
  #     bash -c "while true; do
  #       PGPASSWORD=$$POSTGRES_PASSWORD pg_dump -h db -U $$POSTGRES_USER $$POSTGRES_DB > /db-backup/db_$$(date +%Y-%m-%d-%H-%M-%S).pgsql
  #       echo ""Backup done at $$(date +%Y-%m-%d_%H:%M:%S)""
  #       ls -1 /db-backup/*.dump | head -n -2 | xargs rm -f
  #       cp -r /db-backup ../db-backup
  #       sleep 86400
  #     done"
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_DB: db
